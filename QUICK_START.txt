================================================================================
TOKERRGJIK - QUICK START GUIDE
================================================================================

Project has been cleaned up! All redundant files removed.

WHAT WAS REMOVED:
- Docker files (Dockerfile.backend, Dockerfile.flutter, docker-compose.yml)
- Kubernetes configs (k8s directory)
- Node.js files (index.js, package.json)
- Shell scripts (generate_icons.sh)
- Redundant YAML files (codemagic.yaml)
- Markdown documentation files
- Test directory
- Extra .gitignore files
- Dummy sound files (replaced with real audio)

WHAT WAS ADDED:
- Real working sound files (WAV format for cross-platform compatibility)
- Interactive helper scripts for setup and deployment
- API keys configuration template

================================================================================
HELPER SCRIPTS - EVERYTHING THROUGH TERMINAL!
================================================================================

1. SETUP API KEYS (AdMob, Sentry, Stripe)
   Run: ./setup_api_keys.sh
   
   This script will:
   - Guide you to get API keys from each service
   - Open the necessary websites in your browser
   - Help you enter the keys through terminal prompts
   - No need to manually edit files!

2. DEPLOY WEB VERSION (Netlify/Vercel)
   Run: ./deploy_web.sh
   
   This script will:
   - Build the Flutter web app
   - Guide you to log in to Netlify or Vercel through terminal
   - Deploy automatically with CLI commands
   - No need to use web interfaces!

3. PUBLISH TO APP STORES (Play Store/App Store)
   Run: ./publish_app.sh
   
   This script will:
   - Guide you through Play Store and App Store publishing
   - Help with signing keys and certificates
   - Use terminal commands where possible
   - Open necessary web pages when terminal is not enough

================================================================================
DIRECTORY STRUCTURE
================================================================================

TokerrGjiks/
├── .env.example              # Backend environment variables template
├── .github/workflows/        # GitHub Actions for CI/CD
│   └── build-apps.yml       # Builds Android, iOS, Web
├── .gitignore               # Root ignore file
├── setup_api_keys.sh        # API keys setup helper
├── deploy_web.sh            # Web deployment helper
├── publish_app.sh           # App store publishing helper
└── tokerrgjik_mobile/       # Main Flutter app
    ├── android/             # Android platform files
    ├── ios/                 # iOS platform files
    ├── linux/               # Linux platform files
    ├── macos/               # macOS platform files
    ├── windows/             # Windows platform files
    ├── web/                 # Web platform files
    ├── assets/sounds/       # Sound files (WAV format)
    ├── lib/                 # Dart source code
    │   ├── config/          # Configuration files
    │   │   └── api_keys.dart.template  # API keys template
    │   ├── models/          # Data models
    │   ├── screens/         # UI screens
    │   ├── services/        # Business logic services
    │   └── widgets/         # Reusable UI components
    └── pubspec.yaml         # Flutter dependencies

================================================================================
GETTING STARTED
================================================================================

1. First time setup:
   ./setup_api_keys.sh

2. Run the app locally:
   cd tokerrgjik_mobile
   flutter pub get
   flutter run

3. Build for platforms:
   flutter build apk           # Android APK
   flutter build appbundle     # Android App Bundle (for Play Store)
   flutter build ios           # iOS (requires Mac)
   flutter build web           # Web version
   flutter build linux         # Linux
   flutter build windows       # Windows
   flutter build macos         # macOS

4. Deploy web version:
   ./deploy_web.sh

5. Publish to stores:
   ./publish_app.sh

================================================================================
GITHUB ACTIONS CI/CD
================================================================================

Automatic builds are configured! When you push to main or create a tag:

- Push to main: Builds and uploads artifacts
- Create tag v*: Builds and creates GitHub release

Create a release:
  git tag v1.0.0
  git push --tags

The workflow will automatically:
- Build Android APK and AAB
- Build iOS IPA
- Build Web version
- Upload artifacts (kept for 90 days)
- Create GitHub release (if tagged)

================================================================================
API KEYS & CREDENTIALS
================================================================================

Where to get API keys (the scripts will help you!):

1. Google AdMob (for ads):
   URL: https://admob.google.com/
   What: Ad Unit IDs for banner, interstitial, rewarded ads
   Cost: Free (Google takes 30% revenue share)

2. Sentry (for error tracking):
   URL: https://sentry.io/
   What: DSN (Data Source Name)
   Cost: Free tier available

3. Stripe (for payments):
   URL: https://stripe.com/
   What: Publishable key
   Cost: Free (pays per transaction: 2.9% + $0.30)

All keys go in: tokerrgjik_mobile/lib/config/api_keys.dart
(This file is in .gitignore and won't be committed)

================================================================================
SOUND SYSTEM
================================================================================

✓ FIXED! Sound system now works properly.

Changes made:
- Replaced 38-byte dummy MP3 files with real WAV audio files
- Updated sound_service.dart to use WAV format
- WAV files are cross-platform compatible (Windows, Mac, Linux, iOS, Android, Web)

Sound files included:
- background.wav (431 KB) - Background music loop
- click.wav (4.4 KB) - UI click sounds
- coin.wav (18 KB) - Coin collection sound
- lose.wav (44 KB) - Defeat sound
- mill.wav (26 KB) - Mill formation sound
- move.wav (8.7 KB) - Piece movement sound
- place.wav (13 KB) - Piece placement sound
- remove.wav (13 KB) - Piece removal sound
- win.wav (44 KB) - Victory sound

The sounds are procedurally generated tones. You can replace them with better
audio files if needed - just keep the same filenames and WAV format.

================================================================================
TROUBLESHOOTING
================================================================================

Build fails?
- Run: flutter clean && flutter pub get
- Check that Flutter is up to date: flutter upgrade
- Verify api_keys.dart exists: ls tokerrgjik_mobile/lib/config/api_keys.dart

Sounds not playing?
- Sounds work on all platforms now (WAV format)
- Check that sound files exist: ls tokerrgjik_mobile/assets/sounds/
- Verify pubspec.yaml includes assets

GitHub Actions failing?
- Check the workflow file: .github/workflows/build-apps.yml
- View logs in: https://github.com/YOUR_USERNAME/TokerrGjiks/actions
- Common issue: Flutter version mismatch (currently set to 3.35.6)

================================================================================
SUPPORT
================================================================================

For issues or questions:
1. Check GitHub Actions logs for build errors
2. Run flutter doctor to check your setup
3. Check the scripts output for helpful messages

The scripts are designed to be self-explanatory and will guide you through
each step!

================================================================================
